(()=>{"use strict";var o={n:e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return o.d(n,{a:n}),n},d:(e,n)=>{for(var t in n)o.o(n,t)&&!o.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},o:(o,e)=>Object.prototype.hasOwnProperty.call(o,e)};const e=require("express");var n=o.n(e);const t=require("mongodb"),s=new(o.n(t)().MongoClient)("mongodb://localhost:27018/");let c=null;const r=n()();r.use(n().json()),r.get("/",((o,e)=>{e.send("Welcome to 360VR server!")})),r.post("/storeMetrics",((o,e)=>{let n=o.body;console.log(o.body),void 0!==o.body&&function(o){!async function(o,e){const n=c.collection("metrics");e.updateTime=new Date;const t=await n.insertOne(e);console.log("Insert result: ",t)}(0,o)}(o.body),e.send("Data Received: "+JSON.stringify(n))})),r.listen(3e3,(()=>console.log("Express is listening at http://localhost:3000"))),async function(){await async function(){await s.connect().then((()=>{console.log("Connected successfully to mongodb"),c=s.db("360vr")})).catch((o=>{console.log("Connection to mongodb error: ",o)}))}()}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJtQkFDQSxJQUFJQSxFQUFzQixDQ0ExQkEsRUFBeUJDLElBQ3hCLElBQUlDLEVBQVNELEdBQVVBLEVBQU9FLFdBQzdCLElBQU9GLEVBQWlCLFFBQ3hCLElBQU0sRUFFUCxPQURBRCxFQUFvQkksRUFBRUYsRUFBUSxDQUFFRyxFQUFHSCxJQUM1QkEsQ0FBTSxFQ0xkRixFQUF3QixDQUFDTSxFQUFTQyxLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hQLEVBQW9CUyxFQUFFRixFQUFZQyxLQUFTUixFQUFvQlMsRUFBRUgsRUFBU0UsSUFDNUVFLE9BQU9DLGVBQWVMLEVBQVNFLEVBQUssQ0FBRUksWUFBWSxFQUFNQyxJQUFLTixFQUFXQyxJQUUxRSxFQ05EUixFQUF3QixDQUFDYyxFQUFLQyxJQUFVTCxPQUFPTSxVQUFVQyxlQUFlQyxLQUFLSixFQUFLQyxJQ0FsRixNQUFNLEVBQStCSSxRQUFRLFcsYUNBN0MsTUFBTSxFQUErQkEsUUFBUSxXQ0l2Q0MsRUFBUyxJLE1BQUksR0FBQUMsYUFIUCw4QkFNTCxJQUFJQyxFQUFlLEtDSjFCLE1BQU1DLEVBQU0sTUFFWkEsRUFBSUMsSUFBSSxZQU1SRCxFQUFJVixJQUFJLEtBQUssQ0FBQ1ksRUFBS0MsS0FDZkEsRUFBSUMsS0FBSywyQkFBMkIsSUFHeENKLEVBQUlLLEtBQUssaUJBQWlCLENBQUNILEVBQUtDLEtBQzVCLElBQUlHLEVBQU9KLEVBQUlLLEtBQ2ZDLFFBQVFDLElBQUlQLEVBQUlLLFdBQ0NHLElBQWJSLEVBQUlLLE1DZEwsU0FBcUJELElGWXJCSyxlQUE4QkMsRUFBb0JDLEdBQ3JELE1BQU1DLEVBQU1mLEVBQVFhLFdFZkQsV0ZnQm5CQyxFQUFJRSxXQUFhLElBQUlDLEtBQ3JCLE1BQU1iLFFBQVlXLEVBQUlHLFVBQVVKLEdBQ2hDTCxRQUFRQyxJQUFJLGtCQUFtQk4sRUFDbkMsQ0VoQkllLENBSG1CLEVBR1laLEVBQ25DLENEWWdDYSxDQUFZakIsRUFBSUssTUFDNUNKLEVBQUlDLEtBQUssa0JBQW9CZ0IsS0FBS0MsVUFBVWYsR0FBTSxJQUd0RE4sRUFBSXNCLE9BbEJTLEtBa0JJLElBQ05kLFFBQVFDLElBQUksbURBaEJ2QkUsdUJERU9BLHVCQUNHZCxFQUFPMEIsVUFBVUMsTUFBSyxLQUN4QmhCLFFBQVFDLElBQUkscUNBQ1pWLEVBQVVGLEVBQU80QixHQVZkLFFBVW9CLElBQ3hCQyxPQUFNQyxJQUFTbkIsUUFBUUMsSUFBSSxnQ0FBaUNrQixFQUFJLEdBQ3ZFLENDTlVDLEVBQ1YsQ0FnQkFDLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zNjB2ci1zZXJ2ZXIvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vMzYwdnItc2VydmVyL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovLzM2MHZyLXNlcnZlci93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vMzYwdnItc2VydmVyL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vMzYwdnItc2VydmVyL2V4dGVybmFsIGNvbW1vbmpzIFwiZXhwcmVzc1wiIiwid2VicGFjazovLzM2MHZyLXNlcnZlci9leHRlcm5hbCBjb21tb25qcyBcIm1vbmdvZGJcIiIsIndlYnBhY2s6Ly8zNjB2ci1zZXJ2ZXIvLi9zcmMvbW9uZ29EQi50cyIsIndlYnBhY2s6Ly8zNjB2ci1zZXJ2ZXIvLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vMzYwdnItc2VydmVyLy4vc3JjL2FwcC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiY29uc3QgX19XRUJQQUNLX05BTUVTUEFDRV9PQkpFQ1RfXyA9IHJlcXVpcmUoXCJleHByZXNzXCIpOyIsImNvbnN0IF9fV0VCUEFDS19OQU1FU1BBQ0VfT0JKRUNUX18gPSByZXF1aXJlKFwibW9uZ29kYlwiKTsiLCJpbXBvcnQgTW9uZ29DbGllbnQgZnJvbSAnbW9uZ29kYic7XG5jb25zdCB1cmwgPSBcIm1vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTgvXCI7XG5jb25zdCBkYiA9IFwiMzYwdnJcIjtcbmNvbnN0IGNvbGxlY3Rpb25OYW1lID0gXCJtZXRyaWNzXCI7XG5jb25zdCBjbGllbnQgPSBuZXcgTW9uZ29DbGllbnQuTW9uZ29DbGllbnQodXJsKTtcblxuXG5leHBvcnQgbGV0IG1vbmdvZGI6IGFueSA9IG51bGw7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjb25uZWN0VG9Nb25nb0RCKCkge1xuICAgIGF3YWl0IGNsaWVudC5jb25uZWN0KCkudGhlbigoKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdDb25uZWN0ZWQgc3VjY2Vzc2Z1bGx5IHRvIG1vbmdvZGInKTtcbiAgICAgICAgbW9uZ29kYiA9IGNsaWVudC5kYihkYik7XG4gICAgfSkuY2F0Y2goZXJyID0+IHsgY29uc29sZS5sb2coJ0Nvbm5lY3Rpb24gdG8gbW9uZ29kYiBlcnJvcjogJywgZXJyKSB9KTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGluc2VydERvY3VtZW50KGNvbGxlY3Rpb246IHN0cmluZywgZG9jOiBNZXRyaWNPYmopIHtcbiAgICBjb25zdCBjb2wgPSBtb25nb2RiLmNvbGxlY3Rpb24oY29sbGVjdGlvbik7XG4gICAgZG9jLnVwZGF0ZVRpbWUgPSBuZXcgRGF0ZSgpO1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGNvbC5pbnNlcnRPbmUoZG9jKTtcbiAgICBjb25zb2xlLmxvZygnSW5zZXJ0IHJlc3VsdDogJywgcmVzKTtcbn1cblxuXG5leHBvcnQgaW50ZXJmYWNlIE1ldHJpY09iaiB7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIHVwZGF0ZVRpbWU6IERhdGU7XG4gICAgeDogbnVtYmVyO1xuICAgIHk6IG51bWJlcjtcbiAgICB6OiBudW1iZXI7XG4gICAgYWRhcHRhdGlvblNldDogc3RyaW5nO1xuICAgIHJlcHJlc2VudGF0aW9uSWQ6IG51bWJlcjtcbiAgICB3aWRodDogbnVtYmVyO1xuICAgIGhlaWdodDogbnVtYmVyO1xufSIsImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgb25TdG9yZURhdGEgfSBmcm9tICcuL2FwcCc7XG5pbXBvcnQgeyBjb25uZWN0VG9Nb25nb0RCIH0gZnJvbSAnLi9tb25nb0RCJztcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IHBvcnQgPSAzMDAwO1xuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5cbmFzeW5jIGZ1bmN0aW9uIGluaXRBcHAoKSB7XG4gICAgYXdhaXQgY29ubmVjdFRvTW9uZ29EQigpO1xufVxuXG5hcHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgcmVzLnNlbmQoJ1dlbGNvbWUgdG8gMzYwVlIgc2VydmVyIScpO1xufSk7XG5cbmFwcC5wb3N0KCcvc3RvcmVNZXRyaWNzJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgbGV0IGRhdGEgPSByZXEuYm9keTtcbiAgICBjb25zb2xlLmxvZyhyZXEuYm9keSlcbiAgICBpZiAocmVxLmJvZHkgIT09IHVuZGVmaW5lZCkgb25TdG9yZURhdGEocmVxLmJvZHkpO1xuICAgIHJlcy5zZW5kKCdEYXRhIFJlY2VpdmVkOiAnICsgSlNPTi5zdHJpbmdpZnkoZGF0YSkpO1xufSlcblxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XG4gICAgcmV0dXJuIGNvbnNvbGUubG9nKGBFeHByZXNzIGlzIGxpc3RlbmluZyBhdCBodHRwOi8vbG9jYWxob3N0OiR7cG9ydH1gKTtcbn0pO1xuaW5pdEFwcCgpOyIsImltcG9ydCB7IGluc2VydERvY3VtZW50LCBNZXRyaWNPYmogfSBmcm9tIFwiLi9tb25nb0RCXCI7XG5cbmNvbnN0IGNvbGxlY3Rpb25OYW1lID0gXCJtZXRyaWNzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBvblN0b3JlRGF0YShkYXRhOiBhbnkpOiB2b2lkIHtcbiAgICBpbnNlcnREb2N1bWVudChjb2xsZWN0aW9uTmFtZSwgZGF0YSBhcyBNZXRyaWNPYmopXG59Il0sIm5hbWVzIjpbIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGUiLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJleHBvcnRzIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJvYmoiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwicmVxdWlyZSIsImNsaWVudCIsIk1vbmdvQ2xpZW50IiwibW9uZ29kYiIsImFwcCIsInVzZSIsInJlcSIsInJlcyIsInNlbmQiLCJwb3N0IiwiZGF0YSIsImJvZHkiLCJjb25zb2xlIiwibG9nIiwidW5kZWZpbmVkIiwiYXN5bmMiLCJjb2xsZWN0aW9uIiwiZG9jIiwiY29sIiwidXBkYXRlVGltZSIsIkRhdGUiLCJpbnNlcnRPbmUiLCJpbnNlcnREb2N1bWVudCIsIm9uU3RvcmVEYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsImxpc3RlbiIsImNvbm5lY3QiLCJ0aGVuIiwiZGIiLCJjYXRjaCIsImVyciIsImNvbm5lY3RUb01vbmdvREIiLCJpbml0QXBwIl0sInNvdXJjZVJvb3QiOiIifQ==